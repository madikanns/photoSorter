version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: stockprediction-postgres
    environment:
      POSTGRES_DB: stockprediction
      POSTGRES_USER: stockprediction
      POSTGRES_PASSWORD: stockprediction_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - stockprediction-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: stockprediction-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - stockprediction-network

  # Backend API
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: stockprediction-backend
    environment:
      - DATABASE_URL=postgresql://stockprediction:stockprediction_password@postgres:5432/stockprediction
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=production
      - DEBUG=false
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./data:/app/data
      - ./models:/app/models
    networks:
      - stockprediction-network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: stockprediction-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - stockprediction-network
    restart: unless-stopped

  # Celery Worker for background tasks
  celery-worker:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: stockprediction-celery-worker
    command: celery -A app.celery worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://stockprediction:stockprediction_password@postgres:5432/stockprediction
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=production
    depends_on:
      - postgres
      - redis
    volumes:
      - ./data:/app/data
      - ./models:/app/models
    networks:
      - stockprediction-network
    restart: unless-stopped

  # Celery Beat for scheduled tasks
  celery-beat:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: stockprediction-celery-beat
    command: celery -A app.celery beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://stockprediction:stockprediction_password@postgres:5432/stockprediction
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=production
    depends_on:
      - postgres
      - redis
    volumes:
      - ./data:/app/data
      - ./models:/app/models
    networks:
      - stockprediction-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: stockprediction-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - stockprediction-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  stockprediction-network:
    driver: bridge
